{
    "year": 2022,
    "day": 10,
    "part1": {
        "description": "",
        "answer": "15360",
        "converted_description": "You are given a program that consists of instructions for a CPU. The CPU has a single register, X, which starts with the value 1. The instructions include `addx V`, which adds the value V to the register X after two cycles, and `noop`, which does nothing and takes one cycle to complete. The program is executed by cycling through the instructions, with each cycle representing one tick of the clock circuit.\n\nYou need to determine the signal strength at certain cycles. The signal strength is calculated by multiplying the cycle number by the value of register X. Specifically, you need to calculate the signal strength during the 20th, 60th, 100th, 140th, 180th, and 220th cycles. The sum of these six signal strengths is the final answer.\n\nInput Format:\nThe input is a sequence of instructions for the CPU. Each instruction is on a separate line and can be either `addx V` or `noop`, where V is an integer."
    },
    "part2": {
        "description": "",
        "answer": "PHLHJGZA",
        "converted_description": "You are given a program similar to Part 1, but with an additional challenge. The X register controls the horizontal position of a sprite on a CRT screen. The sprite is 3 pixels wide, and the X register sets the horizontal position of the middle pixel. The screen is 40 pixels wide and 6 pixels high.\n\nThe program is executed alongside the CRT drawing operations, with each cycle representing one tick of the clock circuit. During each cycle, a pixel is drawn on the screen, and you need to determine if the sprite is visible at that instant. If the sprite's middle pixel aligns with the currently drawn pixel, it is considered lit (#); otherwise, it is considered dark (.).\n\nYou need to render the image produced by the program on the CRT screen and identify the eight capital letters that appear.\n\nInput Format:\nThe input is a sequence of instructions for the CPU, similar to Part 1. Each instruction is on a separate line and can be either `addx V` or `noop`, where V is an integer."
    },
    "input": "noop\nnoop\naddx 5\naddx 31\naddx -30\naddx 2\naddx 7\nnoop\nnoop\naddx -4\naddx 5\naddx 6\nnoop\naddx -1\naddx 5\naddx -1\naddx 5\naddx 1\nnoop\naddx 5\nnoop\naddx -1\naddx -35\naddx 3\nnoop\naddx 2\naddx 3\naddx -2\naddx 2\nnoop\naddx 8\naddx -3\naddx 5\naddx -17\naddx 22\naddx -2\naddx 2\naddx 5\naddx -2\naddx -26\naddx 31\naddx 2\naddx 5\naddx -40\naddx 30\naddx -27\naddx 4\naddx 2\naddx 3\naddx -3\naddx 8\nnoop\nnoop\naddx 2\naddx 21\naddx -15\naddx -2\naddx 2\nnoop\naddx 15\naddx -16\naddx 8\nnoop\naddx 3\naddx 5\naddx -38\nnoop\nnoop\nnoop\naddx 5\naddx -5\naddx 6\naddx 2\naddx 7\nnoop\nnoop\naddx 4\naddx -3\nnoop\nnoop\naddx 7\naddx 2\naddx 2\naddx -1\nnoop\naddx 3\naddx 6\nnoop\naddx 1\nnoop\nnoop\naddx -38\nnoop\nnoop\naddx 7\naddx 3\nnoop\naddx 2\naddx -2\naddx 7\naddx -2\naddx 5\naddx 2\naddx 5\naddx -4\naddx 2\naddx 5\naddx 2\naddx -21\naddx 9\naddx 15\nnoop\naddx 3\naddx -38\naddx 7\nnoop\nnoop\naddx 18\naddx -17\naddx 4\nnoop\naddx 1\naddx 2\naddx 5\naddx 3\nnoop\nnoop\naddx 14\naddx -9\nnoop\nnoop\naddx 4\naddx 1\nnoop\naddx 4\naddx 3\nnoop\naddx -8\nnoop"
}