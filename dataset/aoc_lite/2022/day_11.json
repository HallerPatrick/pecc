{
    "year": 2022,
    "day": 11,
    "part1": {
        "description": "",
        "answer": "69918",
        "converted_description": "You are given a set of monkeys and their attributes. Each monkey has a list of starting items (worry levels), an operation that determines how the worry level changes after inspecting an item, and a test that determines where to throw the item based on the worry level. Monkeys take turns inspecting and throwing items in a round. The worry level is divided by three after each inspection. The goal is to count the total number of times each monkey inspects items over 20 rounds and find the level of monkey business by multiplying the counts of the two most active monkeys.\n\nInput Format:\nThe input consists of a list of monkeys with their attributes. Each monkey is represented by its index, starting items (comma-separated integers), an operation (new = old * k or new = old + k), a test (divisible by k), and the throw destinations if the test is true or false. E.g. `Monkey 0:\n  Starting items: 74, 73, 57, 77, 74\n  Operation: new = old * 11\n  Test: divisible by 19\n    If true: throw to monkey 6\n    If false: throw to monkey 7`"
    },
    "part2": {
        "description": "",
        "answer": "19573408701",
        "converted_description": "The worry levels are no longer divided by three after each inspection. The task is to find the level of monkey business after 10000 rounds using the same rules as in Part 1.\n\nInput Format:\nThe input consists of a list of monkeys with their attributes. Each monkey is represented by its index, starting items (comma-separated integers), an operation (new = old * k or new = old + k), a test (divisible by k), and the throw destinations if the test is true or false. E.g. `Monkey 0:\n  Starting items: 74, 73, 57, 77, 74\n  Operation: new = old * 11\n  Test: divisible by 19\n    If true: throw to monkey 6\n    If false: throw to monkey 7`"
    },
    "input": "Monkey 0:\n  Starting items: 74, 73, 57, 77, 74\n  Operation: new = old * 11\n  Test: divisible by 19\n    If true: throw to monkey 6\n    If false: throw to monkey 7\n\nMonkey 1:\n  Starting items: 99, 77, 79\n  Operation: new = old + 8\n  Test: divisible by 2\n    If true: throw to monkey 6\n    If false: throw to monkey 0\n\nMonkey 2:\n  Starting items: 64, 67, 50, 96, 89, 82, 82\n  Operation: new = old + 1\n  Test: divisible by 3\n    If true: throw to monkey 5\n    If false: throw to monkey 3\n\nMonkey 3:\n  Starting items: 88\n  Operation: new = old * 7\n  Test: divisible by 17\n    If true: throw to monkey 5\n    If false: throw to monkey 4\n\nMonkey 4:\n  Starting items: 80, 66, 98, 83, 70, 63, 57, 66\n  Operation: new = old + 4\n  Test: divisible by 13\n    If true: throw to monkey 0\n    If false: throw to monkey 1\n\nMonkey 5:\n  Starting items: 81, 93, 90, 61, 62, 64\n  Operation: new = old + 7\n  Test: divisible by 7\n    If true: throw to monkey 1\n    If false: throw to monkey 4\n\nMonkey 6:\n  Starting items: 69, 97, 88, 93\n  Operation: new = old * old\n  Test: divisible by 5\n    If true: throw to monkey 7\n    If false: throw to monkey 2\n\nMonkey 7:\n  Starting items: 59, 80\n  Operation: new = old + 6\n  Test: divisible by 11\n    If true: throw to monkey 2\n    If false: throw to monkey 3"
}